# Step 1: Import required libraries
import pandas as pd
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.preprocessing import StandardScaler

# Step 2: Sample movie ratings data
data = {
    'User': ['A', 'A', 'A', 'B', 'B', 'C', 'C', 'D'],
    'Movie': ['Titanic', 'Avatar', 'Avengers', 'Titanic', 'Avengers', 'Avatar', 'Avengers', 'Titanic'],
    'Rating': [5, 3, 4, 4, 5, 2, 5, 5]
}

df = pd.DataFrame(data)

# Step 3: Create user-item matrix
user_movie_matrix = df.pivot_table(index='User', columns='Movie', values='Rating').fillna(0)

# Step 4: Compute cosine similarity between users
similarity = cosine_similarity(user_movie_matrix)
similarity_df = pd.DataFrame(similarity, index=user_movie_matrix.index, columns=user_movie_matrix.index)

# Step 5: Function to recommend movies to a user based on similar users
def recommend_movies(user, user_movie_matrix, similarity_df, n=2):
    similar_users = similarity_df[user].sort_values(ascending=False)[1:n+1]
    recommended_movies = pd.Series(dtype='float64')
    
    for other_user, sim_score in similar_users.items():
        unrated = user_movie_matrix.loc[user] == 0
        movies_to_consider = user_movie_matrix.loc[other_user][unrated]
        recommended_movies = recommended_movies.add(movies_to_consider * sim_score, fill_value=0)

    recommended_movies = recommended_movies.sort_values(ascending=False)
    return recommended_movies.head(3)

# Step 6: Get recommendations for a specific user
print("Top movie recommendations for user 'C':")
print(recommend_movies('C', user_movie_matrix, similarity_df))
